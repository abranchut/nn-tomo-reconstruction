[THE PACKAGE IS CURRENTLY A WORK IN PROGRESS]

An implementation of the NN-FBP algorithm from [1]_ using the pytorch library, as well as some other utility functions, in the context of applying the algorithm to STEM measurements on COFs and MOFs. Right now, it can only run on a NVIDIA GPU with at least 24 GB of memory.

To install, run ``pip install .`` in the root folder.

**Documentation**

The documentation is currently available in ``CentralData/Temp/Alix/documentation nntomo`` on the IMW server. Alternatively, the documentation can be generated by running ``make html`` in the ``docs`` folder (sphinx_ and pydata-sphinx-theme_ must be installed).

.. _sphinx: https://www.sphinx-doc.org/en/master/index.html
.. _pydata-sphinx-theme: https://pydata-sphinx-theme.readthedocs.io/en/stable/index.html

**Code structure**

The code is currently structured into 6 files:

- ``volume.py`` contains the class Volume, to represent 3d objects (wrapper of a 3d numpy array),
- ``projection_stack.py`` contains the class ProjectionStack, to represent stacks of projections from tomography in various formats; reconstruction methods are here,
- ``network.py`` contains the pytorch Neural Network class, as well as the training functions,
- ``dataset_slices.py`` contains the pytorch Dataset class,
- ``custom_interp.py`` contains custom interpolation functions running on GPU for fast dataset computation and fast reconstruction,
- ``utilities.py`` contains utility functions.


**Tutorials**

- For the basics on the use of Python classes, see ``tutorial_classes.ipynb`` in the ``scripts`` folder.
- For an introduction on neural networks: https://www.3blue1brown.com/topics/neural-networks.
- For explanations about the training procedure and the pytorch framework: https://pytorch.org/tutorials/beginner/basics/intro.html.
An example of tomographic reconstruction using this package is available in ``scripts/particle_reconstruction.ipynb``.


.. [1] Pelt, D., & Batenburg, K. (2013). Fast tomographic reconstruction from limited data using artificial neural networks. Image Processing, IEEE Transactions on, 22(12), pp.5238-5251.
